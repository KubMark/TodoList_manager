version: '3.8'
services:
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      -  todomanager:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 3s

  api:
    build: .
    restart: always
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
       - "8000:8000"
    volumes:
      - ./core:/todolist/core
      - ./todolist:/todolist/todolist
      - ./goals:/todolist/goals
      - ./bot:/todolist/bot
      - django_static:/todolist/static

  telegram_bot:
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runbot

  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static

volumes:
  todomanager:
  django_static: